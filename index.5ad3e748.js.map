{"mappings":"AAAO,MAAMA,EAAO,CAChBC,KAAMC,SAASC,cAAc,cAC7BC,KAAMF,SAASC,cAAc,eCA1B,SAASE,EAAYC,GAC5B,MAAMC,EAASD,EAAME,KAAIC,GAAQ,4EACaA,EAAKC,8BAC5CD,EAAKE,qBACPF,EAAKG,wBACFC,KAAK,IAEbb,EAAKI,KAAKU,UAAY,GACtBd,EAAKI,KAAKW,mBAAmB,YAAYR,E,CCVlC,SAASS,EAAWC,GACtB,MACEC,UAAUP,SAAEA,EAAQC,SAAEA,IACpBK,EAAEE,cACAC,EAAW,CACfV,GAAIW,KAAKC,OAGX,GAAKX,EAASY,OAAUX,EAASW,MAOlC,OAHE,IAAIC,SAASP,EAAEE,eAAeM,SAAQ,CAACF,EAAOG,KAC7CN,EAASM,GAAQH,CAAK,IAElBH,EANJO,MAAM,mB,CCDb,SAASC,IACP,OAAOC,KAAKC,MAAMC,aAAaC,QATP,WASsC,E,KAKhEC,EAAe,C,SAZf,SAAkBxB,GACd,MAAMH,EAAQsB,IACdtB,EAAM4B,KAAKzB,GACXsB,aAAaI,QALS,QAKkBN,KAAKO,UAAU9B,G,WAShCsB,GCQ3B5B,EAAKC,KAAKoC,iBAAiB,UClBpB,SAAoBpB,GACvBA,EAAEqB,iBACFL,EAAgBM,SAASvB,EAAWC,IACpCZ,EAAY4B,EAAgBO,YAC5BxC,EAAKC,KAAKwC,O,IDedpC,EAAY4B,EAAgBO","sources":["src/js/refs.js","src/js/renderNotes.js","src/js/createNote.js","src/js/localStorageAPI.js","src/index.js","src/js/submitForm.js"],"sourcesContent":["export const refs = {\n    form: document.querySelector('#task-form'),\n    list: document.querySelector('#task-list'),\n}\n","import { refs } from \"./refs\";\n\nexport function renderNotes(notes) {\nconst markup = notes.map(note => `<li class=\"task-list-item\">\n<button class=\"task-list-item-btn\" data-id=\"${note.id}\">Удалить</button>\n <h3>${note.taskName}</h3>\n<p>${note.taskText}</p>\n</li>`).join('');\n\nrefs.list.innerHTML = '';\nrefs.list.insertAdjacentHTML('beforeend',markup);\n}\n\n","export function createNote(e) {\n     const {\n       elements: { taskName, taskText },\n     } = e.currentTarget;\n     const dataNote = {\n       id: Date.now(),\n     };\n\n     if (!taskName.value || !taskText.value) {\n       alert('Fill all fields!');\n       return;\n     }\n      new FormData(e.currentTarget).forEach((value, name) => {\n       dataNote[name] = value;\n      });\n    return dataNote\n}","const LOCAL_STORAGE_KEY = \"NOTES\"\n\nfunction saveData(note) {\n    const notes = getNotes();\n    notes.push(note);\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(notes))\n}\n\nfunction getNotes () {\n  return JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY)) || [];\n}\n\n\n\nexport default { saveData, getNotes }\n\n","/**\n * Створи список справ.\n * На сторінці є два інпути які має вводиться назва і текст задачі.\n * Після натискання на кнопку \"Додати\" завдання додається до списку #task-list.\n *\n * Розмітка картки задачі\n  <li class=\"task-list-item\">\n    <button class=\"task-list-item-btn\">Удалить</button>\n     <h3>Заголовок</h3>\n    <p>Текст</p>\n </li>\n *\n * У кожної картки має бути кнопка \"Видалити\", щоб можна було\n * прибрати завдання зі списку.\n * Список із завданнями має бути доступним після перезавантаження сторінки.\n */\n\nimport { refs } from \"./js/refs\";\nimport { submitForm } from \"./js/submitForm\";\nimport localStorageAPI from \"./js/localStorageAPI\";\nimport { renderNotes } from \"./js/renderNotes\";\n\nrefs.form.addEventListener(\"submit\", submitForm)\nrenderNotes(localStorageAPI.getNotes());","import { renderNotes } from \"./renderNotes\";\nimport { createNote } from \"./createNote\";\nimport { refs } from \"./refs\";\nimport localStorageAPI from \"./localStorageAPI\";\nexport function submitForm(e) {\n    e.preventDefault();\n    localStorageAPI.saveData(createNote(e));\n    renderNotes(localStorageAPI.getNotes());\n    refs.form.reset();\n}\n"],"names":["$ee27a4d7c64fc8c4$export$21666b427502ea6d","form","document","querySelector","list","$29b4d24969412762$export$da3fb9bb4fe718b","notes","markup","map","note","id","taskName","taskText","join","innerHTML","insertAdjacentHTML","$d4daa78a533cd9de$export$4640c0d5ffcf906e","e","elements","currentTarget","dataNote","Date","now","value","FormData","forEach","name","alert","$f1e93b4660a948dd$var$getNotes","JSON","parse","localStorage","getItem","$f1e93b4660a948dd$export$2e2bcd8739ae039","push","setItem","stringify","addEventListener","preventDefault","saveData","getNotes","reset"],"version":3,"file":"index.5ad3e748.js.map"}